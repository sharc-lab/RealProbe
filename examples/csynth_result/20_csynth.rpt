

================================================================
== Synthesis Summary Report of 'loop_sequential'
================================================================
+ General Information: 
    * Date:           Sat May 18 13:37:18 2024
    * Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
    * Project:        project
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |       Modules      | Issue|      | Latency | Latency | Iteration|         | Trip |          |        |    |           |           |     |
    |       & Loops      | Type | Slack| (cycles)|   (ns)  |  Latency | Interval| Count| Pipelined|  BRAM  | DSP|     FF    |    LUT    | URAM|
    +--------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |+ loop_sequential*  |     -|  0.00|       48|  480.000|         -|       49|     -|  dataflow|  8 (2%)|   -|  4858 (4%)|  4630 (8%)|    -|
    | + Loop_SUM_X_proc  |     -|  0.00|       48|  480.000|         -|       48|     -|        no|       -|   -|  538 (~0%)|  328 (~0%)|    -|
    |  o SUM_X           |     -|  7.30|       46|  460.000|        17|        1|    31|       yes|       -|   -|          -|          -|    -|
    | + Loop_SUM_Y_proc  |     -|  0.00|       48|  480.000|         -|       48|     -|        no|       -|   -|  538 (~0%)|  328 (~0%)|    -|
    |  o SUM_Y           |     -|  7.30|       46|  460.000|        17|        1|    31|       yes|       -|   -|          -|          -|    -|
    +--------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface    | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|              | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_a_port | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
| m_axi_b_port | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
| m_axi_c_port | 13 -> 16   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
| m_axi_d_port | 13 -> 16   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 7             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | A_1      | 0x10   | 32    | W      | Data signal of A                 |                                                                      |
| s_axi_control | A_2      | 0x14   | 32    | W      | Data signal of A                 |                                                                      |
| s_axi_control | B_1      | 0x1c   | 32    | W      | Data signal of B                 |                                                                      |
| s_axi_control | B_2      | 0x20   | 32    | W      | Data signal of B                 |                                                                      |
| s_axi_control | X_1      | 0x28   | 32    | W      | Data signal of X                 |                                                                      |
| s_axi_control | X_2      | 0x2c   | 32    | W      | Data signal of X                 |                                                                      |
| s_axi_control | Y_1      | 0x34   | 32    | W      | Data signal of Y                 |                                                                      |
| s_axi_control | Y_2      | 0x38   | 32    | W      | Data signal of Y                 |                                                                      |
| s_axi_control | xlimit   | 0x40   | 32    | W      | Data signal of xlimit            |                                                                      |
| s_axi_control | ylimit   | 0x48   | 32    | W      | Data signal of ylimit            |                                                                      |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| A        | in        | ap_int<8>*  |
| B        | in        | ap_int<8>*  |
| X        | out       | ap_int<13>* |
| Y        | out       | ap_int<13>* |
| xlimit   | in        | ap_uint<5>  |
| ylimit   | in        | ap_uint<5>  |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+----------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                          |
+----------+---------------+-----------+----------+----------------------------------+
| A        | m_axi_a_port  | interface |          |                                  |
| A        | s_axi_control | register  | offset   | name=A_1 offset=0x10 range=32    |
| A        | s_axi_control | register  | offset   | name=A_2 offset=0x14 range=32    |
| B        | m_axi_b_port  | interface |          |                                  |
| B        | s_axi_control | register  | offset   | name=B_1 offset=0x1c range=32    |
| B        | s_axi_control | register  | offset   | name=B_2 offset=0x20 range=32    |
| X        | m_axi_c_port  | interface |          |                                  |
| X        | s_axi_control | register  | offset   | name=X_1 offset=0x28 range=32    |
| X        | s_axi_control | register  | offset   | name=X_2 offset=0x2c range=32    |
| Y        | m_axi_d_port  | interface |          |                                  |
| Y        | s_axi_control | register  | offset   | name=Y_1 offset=0x34 range=32    |
| Y        | s_axi_control | register  | offset   | name=Y_2 offset=0x38 range=32    |
| xlimit   | s_axi_control | register  |          | name=xlimit offset=0x40 range=32 |
| ylimit   | s_axi_control | register  |          | name=ylimit offset=0x48 range=32 |
+----------+---------------+-----------+----------+----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+----------+-------+-------+--------------------------+
| HW Interface | Direction | Length   | Width | Loop  | Loop Location            |
+--------------+-----------+----------+-------+-------+--------------------------+
| m_axi_a_port | read      | variable | 8     | SUM_X | loop_sequential.cpp:48:9 |
| m_axi_b_port | read      | variable | 8     | SUM_Y | loop_sequential.cpp:53:9 |
| m_axi_c_port | write     | variable | 16    | SUM_X | loop_sequential.cpp:48:9 |
| m_axi_d_port | write     | variable | 16    | SUM_Y | loop_sequential.cpp:53:9 |
+--------------+-----------+----------+-------+-------+--------------------------+

* All M_AXI Variable Accesses
+--------------+----------+---------------------------+-----------+--------------+----------+-------+--------------------------+
| HW Interface | Variable | Access Location           | Direction | Burst Status | Length   | Loop  | Loop Location            |
+--------------+----------+---------------------------+-----------+--------------+----------+-------+--------------------------+
| m_axi_a_port | A        | loop_sequential.cpp:49:15 | read      | Inferred     | variable | SUM_X | loop_sequential.cpp:48:9 |
| m_axi_b_port | B        | loop_sequential.cpp:54:15 | read      | Inferred     | variable | SUM_Y | loop_sequential.cpp:53:9 |
| m_axi_c_port | X        | loop_sequential.cpp:50:12 | write     | Inferred     | variable | SUM_X | loop_sequential.cpp:48:9 |
| m_axi_d_port | Y        | loop_sequential.cpp:55:12 | write     | Inferred     | variable | SUM_Y | loop_sequential.cpp:53:9 |
+--------------+----------+---------------------------+-----------+--------------+----------+-------+--------------------------+


================================================================
== Bind Op Report
================================================================
+------------------------+-----+--------+-----------+-----+--------+---------+
| Name                   | DSP | Pragma | Variable  | Op  | Impl   | Latency |
+------------------------+-----+--------+-----------+-----+--------+---------+
| + loop_sequential      | 0   |        |           |     |        |         |
|  + Loop_SUM_X_proc     | 0   |        |           |     |        |         |
|    add_ln48_fu_191_p2  | -   |        | add_ln48  | add | fabric | 0       |
|    X_accum_1_fu_214_p2 | -   |        | X_accum_1 | add | fabric | 0       |
|  + Loop_SUM_Y_proc     | 0   |        |           |     |        |         |
|    add_ln53_fu_191_p2  | -   |        | add_ln53  | add | fabric | 0       |
|    Y_accum_1_fu_214_p2 | -   |        | Y_accum_1 | add | fabric | 0       |
+------------------------+-----+--------+-----------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Ignored Pragmas
+-----------+---------+-------------------------------------------+----------------------------+
| Type      | Options | Location                                  | Messages                   |
+-----------+---------+-------------------------------------------+----------------------------+
| realprobe |         | loop_sequential.cpp:29 in loop_sequential | unknown HLS pragma ignored |
+-----------+---------+-------------------------------------------+----------------------------+

* Pragmas with Warnings
+----------+---------+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Type     | Options | Location                                  | Messages                                                                                                                                                                           |
+----------+---------+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| dataflow |         | loop_sequential.cpp:31 in loop_sequential | Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region |
+----------+---------+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

* Valid Pragma Syntax
+-----------+--------------------------------------------------------+---------------------------------------------------+
| Type      | Options                                                | Location                                          |
+-----------+--------------------------------------------------------+---------------------------------------------------+
| interface | m_axi port = A depth=32 offset = slave bundle = a_port | loop_sequential.cpp:22 in loop_sequential         |
| interface | m_axi port = B depth=32 offset = slave bundle = b_port | loop_sequential.cpp:23 in loop_sequential         |
| interface | m_axi port = X depth=32 offset = slave bundle = c_port | loop_sequential.cpp:24 in loop_sequential         |
| interface | m_axi port = Y depth=32 offset = slave bundle = d_port | loop_sequential.cpp:25 in loop_sequential         |
| interface | s_axilite port=xlimit                                  | loop_sequential.cpp:26 in loop_sequential, xlimit |
| interface | s_axilite port=ylimit                                  | loop_sequential.cpp:27 in loop_sequential, ylimit |
| interface | s_axilite register port=return                         | loop_sequential.cpp:28 in loop_sequential, return |
+-----------+--------------------------------------------------------+---------------------------------------------------+


