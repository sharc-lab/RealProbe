

================================================================
== Synthesis Summary Report of 'loop_max_bounds'
================================================================
+ General Information: 
    * Date:           Mon Jun 17 15:49:33 2024
    * Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
    * Project:        project
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-------------------+------+------+---------+---------+----------+---------+------+----------+---------+----+-----------+-----------+-----+
    |      Modules      | Issue|      | Latency | Latency | Iteration|         | Trip |          |         |    |           |           |     |
    |      & Loops      | Type | Slack| (cycles)|   (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF    |    LUT    | URAM|
    +-------------------+------+------+---------+---------+----------+---------+------+----------+---------+----+-----------+-----------+-----+
    |+ loop_max_bounds  |     -|  0.00|       42|  420.000|         -|       43|     -|        no|  2 (~0%)|   -|  1183 (1%)|  1227 (2%)|    -|
    | o LOOP_X          |     -|  7.30|       40|  400.000|        11|        1|    31|       yes|        -|   -|          -|          -|    -|
    +-------------------+------+------+---------+---------+----------+---------+------+----------+---------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface    | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|              | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_a_port | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
+--------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+-------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register    | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+-------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL        | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER        | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER      | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR      | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | A_1         | 0x10   | 32    | W      | Data signal of A                 |                                                                      |
| s_axi_control | A_2         | 0x14   | 32    | W      | Data signal of A                 |                                                                      |
| s_axi_control | w1dth       | 0x1c   | 32    | W      | Data signal of w1dth             |                                                                      |
| s_axi_control | result      | 0x24   | 32    | R      | Data signal of result            |                                                                      |
| s_axi_control | result_ctrl | 0x28   | 32    | R      | Control signal of result         | 0=result_ap_vld                                                      |
+---------------+-------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| A        | in        | ap_int<8>*  |
| w1dth    | in        | ap_uint<5>  |
| result   | out       | ap_int<13>* |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+---------------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                               |
+----------+---------------+-----------+----------+---------------------------------------+
| A        | m_axi_a_port  | interface |          |                                       |
| A        | s_axi_control | register  | offset   | name=A_1 offset=0x10 range=32         |
| A        | s_axi_control | register  | offset   | name=A_2 offset=0x14 range=32         |
| w1dth    | s_axi_control | register  |          | name=w1dth offset=0x1c range=32       |
| result   | s_axi_control | register  |          | name=result offset=0x24 range=32      |
| result   | s_axi_control | register  |          | name=result_ctrl offset=0x28 range=32 |
+----------+---------------+-----------+----------+---------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+----------+-------+--------+---------------------------+
| HW Interface | Direction | Length   | Width | Loop   | Loop Location             |
+--------------+-----------+----------+-------+--------+---------------------------+
| m_axi_a_port | read      | variable | 8     | LOOP_X | loop_max_bounds.cpp:34:10 |
+--------------+-----------+----------+-------+--------+---------------------------+

* All M_AXI Variable Accesses
+--------------+----------+---------------------------+-----------+--------------+----------+--------+---------------------------+
| HW Interface | Variable | Access Location           | Direction | Burst Status | Length   | Loop   | Loop Location             |
+--------------+----------+---------------------------+-----------+--------------+----------+--------+---------------------------+
| m_axi_a_port | A        | loop_max_bounds.cpp:36:17 | read      | Inferred     | variable | LOOP_X | loop_max_bounds.cpp:34:10 |
+--------------+----------+---------------------------+-----------+--------------+----------+--------+---------------------------+


================================================================
== Bind Op Report
================================================================
+-------------------------+-----+--------+-------------+-----+--------+---------+
| Name                    | DSP | Pragma | Variable    | Op  | Impl   | Latency |
+-------------------------+-----+--------+-------------+-----+--------+---------+
| + loop_max_bounds       | 0   |        |             |     |        |         |
|   add_ln34_fu_160_p2    | -   |        | add_ln34    | add | fabric | 0       |
|   out_accum_1_fu_185_p2 | -   |        | out_accum_1 | add | fabric | 0       |
+-------------------------+-----+--------+-------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Ignored Pragmas
+-----------+---------+-------------------------------------------+----------------------------+
| Type      | Options | Location                                  | Messages                   |
+-----------+---------+-------------------------------------------+----------------------------+
| realprobe |         | loop_max_bounds.cpp:26 in loop_max_bounds | unknown HLS pragma ignored |
+-----------+---------+-------------------------------------------+----------------------------+

* Valid Pragma Syntax
+-----------+--------------------------------------------------------+---------------------------------------------------+
| Type      | Options                                                | Location                                          |
+-----------+--------------------------------------------------------+---------------------------------------------------+
| interface | m_axi port = A depth=32 offset = slave bundle = a_port | loop_max_bounds.cpp:22 in loop_max_bounds         |
| interface | s_axilite port=w1dth                                   | loop_max_bounds.cpp:23 in loop_max_bounds, w1dth  |
| interface | s_axilite port=result                                  | loop_max_bounds.cpp:24 in loop_max_bounds, result |
| interface | s_axilite register port=return                         | loop_max_bounds.cpp:25 in loop_max_bounds, return |
+-----------+--------------------------------------------------------+---------------------------------------------------+


